@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@model X.PagedList.IPagedList<WebMVC.Models.Person>
@{
    ViewData["Title"] = "ASP.NET Crud";
}

<section class="text-center">
    <h1 class="display-4">People CRUD</h1>
    <p>Created by: <a href="https://www.linkedin.com/in/murilo-manente/" target="_blank">Murilo dos Santos Manente</a>.</p>
</section>

<section class="d-flex justify-content-between mb-3">
    <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("FormPerson", "Person")'">Add Record</button>

    <form method="get" action="@Url.Action("Index", "Person")" class="input-group w-50">
        <input type="text" class="form-control" name="filterValue" placeholder="Search" aria-label="Search" />
        <select class="form-select" name="filterType" aria-label="Select an option to filter">
            <option value="1">ID</option>
            <option value="2" selected>Username</option>
            <option value="3">Fullname</option>
            <option value="4">Date</option>
        </select>
        <button type="submit" class="btn btn-success">Ok</button>
    </form>
</section>

<section class="table-responsive">
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th scope="col">ID</th>
                <th scope="col">Username</th>
                <th scope="col">Fullname</th>
                <th scope="col">Date</th>
                <th scope="col">&nbsp;</th>
                <th scope="col">&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                @foreach (var person in Model)
                {
                    <tr>
                        <td class="align-middle">@person.Id</td>
                        <td class="align-middle">@person.Username</td>
                        <td class="align-middle">@person.Fullname</td>
                        <td class="align-middle">@person.Fulldate</td>
                        <td class="text-center"><button type="button" class="btn btn-warning" onclick="location.href='@Url.Action("FormPerson", "Person", new { id = person.Id })'">Edit</button></td>
                        <td class="text-center"><button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("DeletePerson", "Person", new { id = person.Id })'">Delete</button></td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td>Empty List</td>
                </tr>
            }
        </tbody>
    </table>
</section>

<section class="d-flex justify-content-center">
    @Html.PagedListPager(Model, pageNumber => Url.Action("Index", new { pageNumber }), new PagedListRenderOptions {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
    })
</section>
