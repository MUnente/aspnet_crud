@using WebMVC.Models

@model WebMVC.Models.Person
@{
    ViewData["Title"] = "Add/Update Person";
}

<form method="POST" class="mt-5">
    <div class="d-flex mb-4">
        <button type="submit" class="btn btn-success">Save</button>
        <button type="button" class="btn btn-danger ms-3" onclick="location.href='@Url.Action("Index", "Person")'">Cancel</button>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row mb-3">
        @Html.LabelFor(model => model.Id, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.Id, new { @class = "form-control", id = "txtId", disabled = "disabled" })
        </div>
    </div>
    <div class="row mb-3">
        @Html.LabelFor(model => model.Username, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.Username, new { @class = "form-control", id = "txtUsername" })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-3">
        @Html.LabelFor(model => model.Fullname, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextAreaFor(model => model.Fullname, new { @class = "form-control", id = "txtFullname" })
            @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-3">
        @Html.LabelFor(model => model.Fulldate, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.Fulldate, new { @class = "form-control", id = "txtFulldate", maxlength = "9" })
            @Html.ValidationMessageFor(model => model.Fulldate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-sm-10 offset-sm-2">
            <div class="form-check">
                @Html.CheckBoxFor(model => model.Active, new { @class = "form-check-input", id = "txtActive" })
                @Html.LabelFor(model => model.Active, new { @class = "form-check-label" })
            </div>
        </div>
    </div>
    <div class="row mb-3">
        @Html.LabelFor(model => model.Country, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(model => model.Country, new { @class = "form-control", id = "txtCountry" })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-3">
        @Html.LabelFor(model => model.Role.Id, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            <select class="form-select" name="Role.Id">
                <option value="")>Select option</option>
                <option value="1" @(Model.Role.Id == 1 ? "selected" : "")>Admin</option>
                <option value="2" @(Model.Role.Id == 2 ? "selected" : "")>Customer</option>
                <option value="3" @(Model.Role.Id == 3 ? "selected" : "")>Developer</option>
            </select>
            @Html.ValidationMessageFor(model => model.Role.Id, "", new { @class = "text-danger" })
        </div>
    </div>
</form>

<script src="~/js/formPerson.js" asp-append-version="true"></script>
